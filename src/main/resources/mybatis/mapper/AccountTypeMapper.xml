<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rex.practice.dao.mapper.AccountTypeMapper">
  <resultMap id="BaseResultMap" type="com.rex.practice.dao.model.AccountType">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="removed" jdbcType="BIT" property="removed" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
  </resultMap>

  <insert id="insertSelective" parameterType="com.rex.practice.dao.model.AccountType">
    <selectKey keyProperty="id" order="BEFORE" resultType="string">
      select replace(uuid(), '-', '') as id from dual
    </selectKey>
    insert into account_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id, name,
      <if test="removed != null">removed,</if>
      create_date,
      <if test="updateDate != null">update_date,</if>
      user_id,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      #{id}, #{name},
      <if test="removed != null">#{removed},</if>
      #{createDate},
      <if test="updateDate != null">#{updateDate},</if>
      #{userId},
    </trim>
  </insert>

  <select id="selectAll" resultMap="BaseResultMap">
    select * from account_type
    where removed = 0 and user_id = #{userId}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select * from account_type where id = #{id} and removed = 0
  </select>

  <update id="updateSelectiveByPrimaryKey" parameterType="com.rex.practice.dao.model.AccountType">
    update account_type
    <set>
      <if test="name != null">name = #{name},</if>
      <if test="removed != null">removed = #{removed},</if>
      update_date = #{updateDate},
      <if test="userId != null">user_id = #{userId},</if>
    </set>
    <where>
      id = #{id} and removed = 0 and user_id = #{userId}
    </where>
  </update>
</mapper>