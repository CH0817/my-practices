<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rex.my.dao.mapper.primary.TradeMapper">
    <resultMap id="BaseResultMap" type="com.rex.my.model.dao.primary.Trade">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="money" jdbcType="DECIMAL" property="money"/>
        <result column="trade_type" jdbcType="VARCHAR" property="tradeType"/>
        <result column="trade_date" jdbcType="DATE" property="tradeDate"/>
        <result column="removed" jdbcType="BIT" property="removed"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="account_id" jdbcType="VARCHAR" property="accountId"/>
        <result column="item_id" jdbcType="VARCHAR" property="itemId"/>
    </resultMap>

    <insert id="insertSelective" parameterType="com.rex.my.model.dao.primary.Trade">
        <selectKey keyProperty="id" resultType="string" order="BEFORE">
            select replace(uuid(), '-', '') as id from dual
        </selectKey>
        insert into trade
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id, money, trade_type, trade_date,
            <if test="removed != null">removed,</if>
            create_date,
            <if test="updateDate != null">update_date,</if>
            user_id, account_id, item_id,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{id}, #{money}, #{tradeType}, #{tradeDate},
            <if test="removed != null">#{removed},</if>
            #{createDate},
            <if test="updateDate != null">#{updateDate},</if>
            #{userId}, #{accountId}, #{itemId},
        </trim>
    </insert>

    <select id="selectAll" resultMap="BaseResultMap">
        select * from trade
        where removed = 0 and user_id = #{userId}
    </select>

    <select id="selectByPrimaryKey" parameterType="string" resultMap="BaseResultMap">
        select * from trade where id = #{id} and removed = 0
    </select>

    <update id="update2DeleteByPrimaryKey" parameterType="string">
        update trade set removed = 1 where id = #{id} and removed = 0
    </update>

    <update id="updateSelectiveByPrimaryKey" parameterType="com.rex.my.model.dao.primary.Trade">
        update trade
        <set>
            <if test="money != null">money = #{money},</if>
            <if test="tradeType != null">trade_type = #{tradeType},</if>
            <if test="tradeDate != null">trade_date = #{tradeDate},</if>
            <if test="removed != null">removed = #{removed},</if>
            <if test="accountId != null">account_id = #{accountId},</if>
            <if test="itemId != null">item_id = #{itemId},</if>
            update_date = #{updateDate},
        </set>
        <where>
            id = #{id} and removed = 0
        </where>
    </update>

    <resultMap id="TradeGridResultMap" type="com.rex.my.model.easyui.grid.TradeGridVo">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="money" jdbcType="DECIMAL" property="money"/>
        <result column="trade_type" jdbcType="VARCHAR" property="tradeType"/>
        <result column="trade_date" jdbcType="DATE" property="tradeDate"/>
        <result column="account_id" jdbcType="VARCHAR" property="accountId"/>
        <result column="item_id" jdbcType="VARCHAR" property="itemId"/>
        <result column="account_name" jdbcType="VARCHAR" property="accountName"/>
        <result column="item_name" jdbcType="VARCHAR" property="itemName"/>
    </resultMap>

    <select id="selectForGrid" resultMap="TradeGridResultMap">
        select t.id, t.money, t.trade_type, t.trade_date, t.account_id, t.item_id
        from trade t
        left join account a on t.account_id = a.id
        left join item i on t.item_id = i.id
        where t.removed = 0 and t.user_id = #{userId}
    </select>
</mapper>